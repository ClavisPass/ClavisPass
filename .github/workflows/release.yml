name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-22.04
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4

      - name: Upload Linux binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/rpm/*.rpm
            src-tauri/target/release/bundle/appimage/*
          body: "Linux Release for version ${{ github.ref_name }}"

      - name: Set version without 'v'
        run: echo "VERSION_NO_V=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Update updater.json
        run: |
          echo "{
            \"version\": \"${{ env.VERSION_NO_V }}\",
            \"notes\": \"New Version with Bugfixes\",
            \"pub_date\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"platforms\": {
              \"windows-x86_64\": {
                \"url\": \"https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/ClavisPass_${{ env.VERSION_NO_V }}_x64-setup.exe\"
              },
              \"linux-x86_64\": {
                \"url\": \"https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/clavis-pass_${{ env.VERSION_NO_V }}_amd64.AppImage\"
              },
              \"darwin-aarch64\": {
                \"url\": \"https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/ClavisPass_${{ env.VERSION_NO_V }}_aarch64.dmg\"
              }
            }
          }" > updater.json

      - name: Install and run Tauri signer
        run: |
          cargo install tauri-cli
          export PATH="$HOME/.cargo/bin:$PATH"
          export TAURI_SIGNING_PRIVATE_KEY="${TAURI_PRIVATE_KEY}"
          export TAURI_SIGNING_PRIVATE_KEY_PASSWORD="${TAURI_KEY_PASSWORD}"
          cargo tauri signer sign updater.json > updater.json.sig

      - name: Upload updater.json and signature to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            updater.json
            updater.json.sig

  build-windows:
    runs-on: windows-latest
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4
        with:
          args: --target x86_64-pc-windows-msvc

      - name: Upload Windows binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe
          body: "Windows Release for version ${{ github.ref_name }}"

  build-macos:
    runs-on: macos-latest
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4

      - name: Upload macOS binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.zip
          body: "macOS Release for version ${{ github.ref_name }}"
name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4

      - name: Upload Linux binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/rpm/*.rpm
            src-tauri/target/release/bundle/appimage/*
          body: "Linux Release for version ${{ github.ref_name }}"

  build-windows:
    runs-on: windows-latest
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Visual Studio Build Tools
        run: choco install visualstudio2022buildtools --params "--add Microsoft.VisualStudio.Workload.VCTools" -y

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install NSIS
        run: choco install nsis -y

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4
        with:
          args: --target x86_64-pc-windows-msvc

      - name: Upload Windows binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/msi/*.msi
            src-tauri/target/release/bundle/nsis/*.exe
          body: "Windows Release for version ${{ github.ref_name }}"

  build-macos:
    runs-on: macos-latest
    env:
      TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
      TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4

      - name: Upload macOS binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.zip
          body: "macOS Release for version ${{ github.ref_name }}"

  update-json:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update updater.json
        run: |
          echo '{
            "version": "${{ github.ref_name }}",
            "notes": "New Version with Bugfixes",
            "pub_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "platforms": {
              "windows-x86_64": {
                "url": "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/ClavisPass_${{ github.ref_name }}_x64_en-US.exe"
              },
              "linux-x86_64": {
                "url": "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/clavis-pass_${{ github.ref_name }}_amd64.AppImage"
              },
              "darwin-x86_64": {
                "url": "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/ClavisPass_${{ github.ref_name }}_x64.dmg"
              }
            }
          }' > updater.json

      - name: Upload updater.json to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: updater.json
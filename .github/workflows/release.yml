name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libwebkitgtk-6.0-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4

      - name: Upload Linux binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/deb/*.deb
            src-tauri/target/release/bundle/rpm/*.rpm
            src-tauri/target/release/bundle/appimage/*

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: |
            src-tauri/target/release/bundle/appimage/*.AppImage

  build-windows:
    runs-on: windows-latest
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4
        with:
          args: --target x86_64-pc-windows-msvc

      - name: Upload Windows binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: |
            src-tauri/target/x86_64-pc-windows-msvc/release/bundle/nsis/*.exe

  build-macos:
    runs-on: macos-latest
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Setup Rust & Tauri
        uses: tauri-apps/tauri-action@v0.4

      - name: Upload macOS binaries
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            src-tauri/target/release/bundle/dmg/*.dmg
            src-tauri/target/release/bundle/macos/*.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: |
            src-tauri/target/release/bundle/dmg/*.dmg

  build-android-apk:
    runs-on: ubuntu-latest
    env:
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Install EAS CLI
        run: npm install -g eas-cli

      - name: Check currently logged in user (should fail if not logged in)
        run: |
          echo "Logged in user before login attempt:"
          eas whoami || echo "No user logged in."

      - name: Login to EAS CLI using EXPO_TOKEN
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          echo "Logging in using EXPO_TOKEN environment variable..."
          eas login || echo "Already logged in or token used"

      - name: Verify logged in user after login
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: eas whoami

      - name: Decode Android Keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > android.keystore

      - name: Build APK
        env: 
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        run: |
          eas build --platform android --profile production --non-interactive --local --output=./ClavisPass.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: ClavisPass.apk

  build-updater:
    runs-on: ubuntu-24.04
    needs: [build-linux, build-windows, build-macos, build-android-apk]
    env:
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup Rust & Tauri
        run: cargo install tauri-cli

      - name: Set version without 'v'
        run: echo "VERSION_NO_V=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Sign installers and generate updater.json
        run: |
          VERSION="${{ env.VERSION_NO_V }}"
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}"

          export PATH="$HOME/.cargo/bin:$PATH"

          SIGN_WINDOWS=$(cargo tauri signer sign \
            --private-key "${TAURI_SIGNING_PRIVATE_KEY}" \
            --password "${TAURI_SIGNING_PRIVATE_KEY_PASSWORD}" \
            "artifacts/windows/clavis-pass_${VERSION}_x64-setup.exe" | awk '/^Public signature:/{getline; print}')

          SIGN_LINUX=$(cargo tauri signer sign \
            --private-key "${TAURI_SIGNING_PRIVATE_KEY}" \
            --password "${TAURI_SIGNING_PRIVATE_KEY_PASSWORD}" \
            "artifacts/linux/clavis-pass_${VERSION}_amd64.AppImage" | awk '/^Public signature:/{getline; print}')

          SIGN_MACOS=$(cargo tauri signer sign \
            --private-key "${TAURI_SIGNING_PRIVATE_KEY}" \
            --password "${TAURI_SIGNING_PRIVATE_KEY_PASSWORD}" \
            "artifacts/macos/clavis-pass_${VERSION}_aarch64.dmg" | awk '/^Public signature:/{getline; print}')

          echo "{
            \"version\": \"${VERSION}\",
            \"notes\": \"New Version with Bugfixes\",
            \"pub_date\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",
            \"platforms\": {
              \"windows-x86_64\": {
                \"signature\": \"${SIGN_WINDOWS}\",
                \"url\": \"${RELEASE_URL}/clavis-pass_${VERSION}_x64-setup.exe\"
              },
              \"linux-x86_64\": {
                \"signature\": \"${SIGN_LINUX}\",
                \"url\": \"${RELEASE_URL}/clavis-pass_${VERSION}_amd64.AppImage\"
              },
              \"darwin-aarch64\": {
                \"signature\": \"${SIGN_MACOS}\",
                \"url\": \"${RELEASE_URL}/clavis-pass_${VERSION}_aarch64.dmg\"
              }
            }
          }" > updater.json

      - name: Sign updater.json
        run: |
          cargo tauri signer sign \
            --private-key "${TAURI_SIGNING_PRIVATE_KEY}" \
            --password "${TAURI_SIGNING_PRIVATE_KEY_PASSWORD}" \
            updater.json > updater.json.sig

      - name: Upload updater.json and signature to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ClavisPass Version ${{ github.ref_name }}

            This release includes the latest builds of ClavisPass for Windows, macOS, and Linux.

            All platform-specific installers are available in the release assets.
            The updater will automatically download the correct version for your system.
            Thank you for using ClavisPass!
          files: |
            updater.json
            updater.json.sig
            artifacts/android/ClavisPass.apk